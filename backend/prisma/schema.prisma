// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                    Int       @id @default(autoincrement())
  email                 String    @unique
  password              String?
  username              String    @unique
  imageUrl              String?
  googleId              String?   @unique
  emailVerificationToken String?
  emailVerified         Boolean   @default(false)
  passwordResetToken    String?
  passwordResetExpires  DateTime?
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  private               Boolean   @default(true)
  libraryEntries        LibraryEntry[]
  refreshTokens         RefreshToken[]
}

model RefreshToken {
  token     String   @unique
  userId    Int      @unique
  user      User     @relation(fields: [userId], references: [id])
  expiresAt DateTime

  @@index([userId])
}

model LibraryEntry {
  id        Int      @id @default(autoincrement())
  userId    Int
  itemType  ItemType
  itemId    Int
  status    Status   @default(PLAN_TO_WATCH)
  rating    Int?
  progress  Int      @default(0)
  notes     String?
  favorite  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])

  @@unique([userId, itemType, itemId])
}

model Manga {
  id          Int      @id @default(autoincrement())
  malId       Int      @unique // MyAnimeList ID
  title       String
  imageUrl    String?
  description String?
  chapters    Int?
  volumes     Int?
  status      String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum ItemType {
  MANGA
}

enum Status {
  WATCHING
  COMPLETED
  ON_HOLD
  DROPPED
  PLAN_TO_WATCH
}