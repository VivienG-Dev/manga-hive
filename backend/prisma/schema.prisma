// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    Int       @id @default(autoincrement())
  email                 String    @unique
  password              String?
  username              String    @unique
  avatarUrl             String?
  backgroundImageUrl    String?
  googleId              String?   @unique
  emailVerificationToken String?
  emailVerified         Boolean   @default(false)
  passwordResetToken    String?
  passwordResetExpires  DateTime?
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  private               Boolean   @default(true)
  libraryEntries        LibraryEntry[]
  refreshTokens         RefreshToken[]
}

model RefreshToken {
  token     String   @unique
  userId    Int      @unique
  user      User     @relation(fields: [userId], references: [id])
  expiresAt DateTime

  @@index([userId])
}

model LibraryEntry {
  id              Int      @id @default(autoincrement())
  userId          Int
  malId           Int
  itemType        ItemType
  status          Status   @default(PLAN_TO_READ)
  title           String   @db.VarChar(255)
  imageUrl        String?  @db.Text
  synopsis        String?  @db.Text
  authors         String?  @db.Text
  genres          String?  @db.Text
  chapters        Int?
  volumes         Int?
  userScore       Int?     // New field for user's score
  volumesProgress Int?     // New field for volumes progress
  chaptersProgress Int?    // New field for chapters progress
  notes           String?  @db.Text // New field for user's notes
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  user            User     @relation(fields: [userId], references: [id])

  @@unique([userId, malId, itemType])
}

enum ItemType {
  MANGA
}

enum Status {
  READING
  COMPLETED
  ON_HOLD
  DROPPED
  PLAN_TO_READ
}